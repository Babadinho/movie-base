# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/
/dist/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local
**/.env

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

### Terraform ###
# Local .terraform directories
infrastructure/.terraform
infrastructure/.terraform.lock.hcl

# .tfstate files
infrastructure/*.tfstate
infrastructure/*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
infrastructure/*.tfvars
infrastructure/*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
infrastructure/override.tf
infrastructure/override.tf.json
infrastructure/*_override.tf
infrastructure/*_override.tf.json

# Exclude Terraform .out files
infrastructure/*.out

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
infrastructure/.terraformrc
infrastructure/terraform.rc

# End of https://www.toptal.com/developers/gitignore/api/terraform
